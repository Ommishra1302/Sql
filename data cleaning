-- Data Cleaning
use world_layoffs;
select *
from layoffs;

-- 1. Remove Duplicates
-- 2. Standardize the Data
-- 3. Null Values or Blank Values
-- 4. Remove any columns

create table layoffs_staging
like layoffs;


select *
from layoffs_staging;

insert layoffs_staging
select *
from layoffs;

select *,
row_number() over(partition by 
company,industry,total_laid_off,percentage_laid_off,`date`) as row_num
from layoffs_staging;


with duplicate_cte as (
select *,
row_number() over(partition by 
company,location,industry,total_laid_off,percentage_laid_off,`date`,stage,country,funds_raised_millions) as row_num
from layoffs_staging
)
select * from duplicate_cte
where row_num>1;


select * from layoffs_staging;
delete from layoffs_staging
where count(*) in  (
select company,location,industry,total_laid_off,percentage_laid_off,`date`,stage,country,funds_raised_millions,count(*)
from layoffs_staging
group by company,location,industry,total_laid_off,percentage_laid_off,`date`,stage,country,funds_raised_millions
having count(*)>1);



-- with duplicate_cte as (
-- select *,
-- row_number() over(partition by 
-- company,location,industry,total_laid_off,percentage_laid_off,`date`,stage,country,funds_raised_millions) as row_num
-- from layoffs_staging
-- )
-- delete
-- from duplicate_cte
-- where row_num>1;



-- Standardizing data

select distinct company,(trim(company))
from layoffs_staging;

select *
from layoffs_staging
where industry like'Crypto%';

select distinct country , trim(trailing '.' from country)
from layoffs_staging
order by 1;

update layoffs_staging
set country = trim(trailing '.' from country)
where country like 'United States%';


select `date`,
str_to_date(`date`,'%m/%d/%Y')
from layoffs_staging;

update layoffs_staging
set `date`=str_to_date(`date`,'%m/%d/%Y');

alter table layoffs_staging
modify column `date` date;

select *
from layoffs_staging
where total_laid_off is null;

select *
from layoffs_staging
where industry is null
or industry = '';
select distinct industry
from layoffs_staging


